git pull https://github.com/MoekaKitamura/vending_machine master
git checkout -b ブランチ名
git push https://github.com/MoekaKitamura/vending_machine ブランチ名

１日目

irb で絶対パスを指定してあげることでファイルを実行できるようになる
initialize で vm = VendingMachine.new したときに @slot_money を初期化
vm は VendingMachine クラスをもっているので メソッドをもつ
MONEY を freeze で定数化

２日目

コーラの値を保有するためにハッシュで管理する
ストックも併せて定義初期値として定義
初期値で保有だからinitialize に入れる
irb はコードの変更で再度読み込みが必要
initialize で初期値をハッシュを保有
＊は数字にしか使えない
＠変数は同じクラス内でしか参照できない(rails はコントローラーとモデルが同じスコープ　ｐ２１５）
参照する場合はメソッドを定義
アクセサメソッドを使うと直接インスタンスの保有している値にアクセスできる（書き換えられる）
vm が自動販売機１台というイメージ
vendingMachine は自動販売機製造機
ハッシュの型を文字列型にするか。数字列型にするか
最後の変数名が返り値となる


成功した

３日目

コーラが買えるかどうかを表示するメソッド
buy メソッドのロジックを利用してメソッドを作る
メソッドで？を使うとき慣習的に true false を返す（P.57)
can_buy?ではコーラのストックのロジックに含める必要あり（確認）
irb だとどのディレクトリでも実行可
条件分岐がしっかりできているかを確認
要件は所得するだから一覧を表示させる
配列に購入可能なものにいれるか。puts で表示させるか
自販機の照会ボタンのイメージ
メソッドの場所の順番は自由 メソッド内の順番は上から実行される
@list の中に購入できるものを格納していく形で実装
@list というようにグローバル変数にする意味（ローカル変数で検討）
後置ifで条件が合致したものを@list に入れる（p.35)
200円を入れたら弾かれるのは slot_money でreturn されるから
initialize メソッドは呼び出すときしか使えない（p.212)
git add -A で変更分だけ挙げられる
git branch で今いるブランチを確認
github ブランチに移動することで差分が見れる


